import random
import numpy as np

def bigrandom (n=1000000):
    return random.randrange(2, n)
# Primality tests from Knuth Vol.II 4.5.4
# Algorithm P, etc.
#
# Return false if n is composite, true if n may be prime
#

def modular_pow(base, exponent, modulus):
    if modulus == 1:
        return 0
    #Assert :: (modulus - 1)*(modulus - 1) does not overflow base
    result = 1
    base = base % modulus
    while exponent > 0:
        if (exponent % 2 == 1):
            result = (result * base) % modulus
        exponent = exponent // 2
        base = (base * base) % modulus
    return result


def maybeprime(n):
    if (n & 1) == 0:
        return 0 # n is even.. definitely not prime

    # find q and k, such that n = q*(2**k)+1
    q = n - 1
    k = 0
    while (q & 1) == 0:
        k += 1
        q >>= 1

    x = bigrandom (n) # get a random number for this test

    y = modular_pow(x, q, n)
    if y == 1 or y == n-1:
        return 1 # n may be prime

    for j in range(1, k+1):
        y =  modular_pow(y, 2, n) 
        if y == 1: return 0 # n is definitely not prime
        if y == n-1: return 1 # n may be prime

    return 0 # n is definitely not prime
    # end maybeprime
# Return false if n is composite, true if n is very probably prime.
# The reliablity of the test is increased by increasing t
#
def isprime(n, t=25):
    for j in range(t):
        if not maybeprime(n):
            return 0 # n is known to be composite
    return 1 # n has survived t primality tests, is probably prime
# end isprime
print(isprime
